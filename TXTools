#!/usr/bin/env python
#coding:utf-8

import fire
import os
import ConfigParser
import subprocess
from contextlib import contextmanager

cfg = ConfigParser.ConfigParser()
txtoolspath = os.environ.get('TXTOOLSPATH')
cfg.read(os.path.join(txtoolspath,'tools.conf'))
# print cfg.sections()

class IngestionStage(object):

  def run(self):
    print 'Ingesting! Nom nom nom...'

class DigestionStage(object):

  def run(self, volume=1):
    return ' '.join(['Burp!'] * volume)

  def status(self):
    return 'Satiated.'

class CommandXP(object):

  def __init__(self):
    self.ingestion = IngestionStage()
    self.digestion = DigestionStage()

  def openFileOrDir(self, file='./'):
    os.system('open ' + file)

  # def touchFile(self, file='./tmp.txt'):
  #   os.system('touch ' + file)

  def openFileOrDirWithSublime(self, file='./'):
    os.system('open -a "Sublime Text.app" ' + file)

  def cdx(self, newdir='./'):
    # prevdir = os.getcwd()
    # os.chdir(os.path.expanduser(newdir))
    print "cd " + newdir
    subprocess.call("cd " + newdir, shell=True)
    os.system('pwd')
    # try:
    #     yield
    # finally:
    #     os.chdir(prevdir)

  def openXcodePrjAnywhere(self):
    xcpath = cfg.get('project', 'WorkspacePath')
    # print 'cd ' + xcpath
    # os.system('cd ' + xcpath)
    # os.chdir(xcpath)
    # os.getcwd()
    self.openXcodeWorkspaceOrProject(xcpath)

  def openXcodeWorkspaceOrProject(self, rootdir = './'):
    list = os.listdir(rootdir)#列出目录下的所有文件和目录
    xcodeprojBundle = None
    xcworkspaceBundle = None
    for line in list:
      nPos = line.find('.xcodeproj')
      if nPos != -1:
        xcodeprojBundle = line
      nPos = line.find('.xcworkspace')
      if nPos != -1:
        xcworkspaceBundle = line 
        break
    if None != xcworkspaceBundle:
      os.system('open ' + os.path.join(rootdir, xcworkspaceBundle))
    elif None != xcodeprojBundle:
      os.system('open ' + os.path.join(rootdir, xcodeprojBundle))
    else:
      print '当前目录没有找到XCode工程文件'


if __name__ == '__main__':
  fire.Fire(CommandXP)


